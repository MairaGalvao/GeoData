{"ast":null,"code":"import _slicedToArray from\"/home/maira/Desktop/netLumeProject/react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{React,useState}from'react';import'./App.css';import{MapContainer,TileLayer,Marker,Popup}from'react-leaflet';import{Icon}from'leaflet';import covidData from'./data.json';import icon1 from\"./images/covid19.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var covidIcon=new Icon({iconUrl:icon1,iconSize:[25,25]});function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),activeCovid=_useState2[0],setActiveCovid=_useState2[1];return/*#__PURE__*/_jsxs(MapContainer,{center:[20.593683,78.962883],zoom:5,scrollWheelZoom:true,children:[/*#__PURE__*/_jsx(TileLayer,{attribution:\"\\xA9 <a href=\\\"https://stadiamaps.com/\\\">Stadia Maps</a>, \\xA9 <a href=\\\"https://openmaptiles.org/\\\">OpenMapTiles</a> \\xA9 <a href=\\\"http://openstreetmap.org\\\">OpenStreetMap</a> contributors\",url:\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"}),covidData.map(function(eachData){return/*#__PURE__*/_jsx(Marker,{position:[eachData.Latitude,eachData.Longitude],eventHandlers:{click:function click(){setActiveCovid(eachData);}},icon:covidIcon},eachData.Id);}),activeCovid&&/*#__PURE__*/_jsx(Popup,{position:[activeCovid.Latitude,activeCovid.Longitude],onClose:function onClose(){setActiveCovid(null);},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:activeCovid.Location}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total cases:                \",activeCovid.Total_Cases]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"New cases (1 day*):         \",activeCovid.New_Cases_Per_Day]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Cases per 1 million people: \",activeCovid.Cases_Per_1_Million_People]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Deaths:                     \",activeCovid.Deaths]})]})})]});}export default App;","map":{"version":3,"sources":["/home/maira/Desktop/netLumeProject/react-app/src/App.js"],"names":["React","useState","MapContainer","TileLayer","Marker","Popup","Icon","covidData","covidIcon","iconUrl","icon1","iconSize","App","activeCovid","setActiveCovid","map","eachData","Latitude","Longitude","click","Id","Location","Total_Cases","New_Cases_Per_Day","Cases_Per_1_Million_People","Deaths"],"mappings":"+HAAA,OAAQA,KAAR,CAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,WAAP,CACA,OAASC,YAAT,CAAuBC,SAAvB,CAAkCC,MAAlC,CAA0CC,KAA1C,KAAuD,eAAvD,CACA,OAASC,IAAT,KAAqB,SAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,gIAGA,GAAMC,CAAAA,SAAS,CAAG,GAAIF,CAAAA,IAAJ,CAAS,CACzBG,OAAO,CAAEC,KADgB,CAEzBC,QAAQ,CAAE,CAAC,EAAD,CAAK,EAAL,CAFe,CAAT,CAAlB,CAMA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAwCX,QAAQ,CAAE,IAAF,CAAhD,wCAAQY,WAAR,eAAqBC,cAArB,eACA,mBAEI,MAAC,YAAD,EACI,MAAM,CAAK,CAAE,SAAF,CAAa,SAAb,CADf,CAEI,IAAI,CAAK,CAFb,CAGI,eAAe,CAAK,IAHxB,wBAMA,KAAC,SAAD,EACE,WAAW,CAAC,gMADd,CAEE,GAAG,CAAG,2EAFR,EANA,CAeGP,SAAS,CAACQ,GAAV,CAAc,SAAAC,QAAQ,qBACtB,KAAC,MAAD,EAEG,QAAQ,CAAG,CAACA,QAAQ,CAACC,QAAV,CAAoBD,QAAQ,CAACE,SAA7B,CAFd,CAGG,aAAa,CAAE,CACbC,KAAK,CAAE,gBAAM,CACXL,cAAc,CAACE,QAAD,CAAd,CACD,CAHY,CAHlB,CAQG,IAAI,CAAGR,SARV,EACQQ,QAAQ,CAACI,EADjB,CADsB,EAAtB,CAfH,CA4BEP,WAAW,eACX,KAAC,KAAD,EACE,QAAQ,CAAG,CAAEA,WAAW,CAACI,QAAd,CAAwBJ,WAAW,CAACK,SAApC,CADb,CAEE,OAAO,CAAE,kBAAI,CACXJ,cAAc,CAAC,IAAD,CAAd,CACD,CAJH,uBAME,oCACE,oBAAMD,WAAW,CAACQ,QAAlB,EADF,cAEE,oDAAiCR,WAAW,CAACS,WAA7C,GAFF,cAGE,oDAAiCT,WAAW,CAACU,iBAA7C,GAHF,cAIE,oDAAiCV,WAAW,CAACW,0BAA7C,GAJF,cAKE,oDAAiCX,WAAW,CAACY,MAA7C,GALF,GANF,EA7BF,GAFJ,CAkDD,CAED,cAAeb,CAAAA,GAAf","sourcesContent":["import {React, useState} from 'react'\nimport './App.css'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { Icon } from 'leaflet'\nimport covidData from './data.json'\nimport icon1 from './images/covid19.svg'\n\nconst covidIcon = new Icon({\n  iconUrl: icon1,\n  iconSize: [25, 25]\n})\n\n\nfunction App() {\n  const [ activeCovid, setActiveCovid ] = useState( null );\n  return (\n\n      <MapContainer \n          center = { [ 20.593683, 78.962883 ] }\n          zoom = { 5 }\n          scrollWheelZoom = { true } \n\n      >\n      <TileLayer \n        attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n        url = 'https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'\n      />\n\n       {/* <TileLayer \n          attribution = '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' \n          url = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" \n        /> */}\n       { covidData.map(eachData => (\n         <Marker \n            key={eachData.Id} \n            position= {[eachData.Latitude, eachData.Longitude]}\n            eventHandlers={{\n              click: () => {\n                setActiveCovid(eachData)\n              }\n            }}\n            icon= {covidIcon}\n          />\n       ))}\n\n      { activeCovid && (\n        <Popup \n          position={ [ activeCovid.Latitude, activeCovid.Longitude ] }\n          onClose={()=>{\n            setActiveCovid(null)\n          }}\n        >\n          <div>\n            <h1>{ activeCovid.Location }</h1>\n            <p>Total cases:                { activeCovid.Total_Cases }</p>\n            <p>New cases (1 day*):         { activeCovid.New_Cases_Per_Day }</p>\n            <p>Cases per 1 million people: { activeCovid.Cases_Per_1_Million_People }</p>\n            <p>Deaths:                     { activeCovid.Deaths }</p>\n          </div>\n        </Popup>\n      )}\n\n      </MapContainer> \n  \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}