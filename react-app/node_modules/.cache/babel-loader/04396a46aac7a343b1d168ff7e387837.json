{"ast":null,"code":"var _jsxFileName = \"/home/maira/Desktop/netLumeProject/react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport covidData from './data.json';\nimport icon1 from \"./images/covid19.svg\"; // import { LatLngExpression } from 'leaflet';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [position, setPosition] = useState([0, 0]); //saving the information to be able to render\n\n  const [serverResponseZero, setServerResponseZero] = useState();\n  const [serverResponseOne, setServerResponseOne] = useState();\n  const testCoordinates = [[80.593683, 78.962883], [200.593683, 400.962883], [500.593683, 800.962883]]; // serverResponse = value\n  //setServerResponse is a function with the value as parameter\n\n  async function getData() {\n    console.log(\"fetching data\");\n    const response = await fetch('http://localhost:5000/mapview');\n    console.log(\"fetching data in json\");\n    const jsonResponse = await response.json(); // setServerResponse(jsonResponse)\n    // console.log(\"fetching the json FEATURES\")\n    // var jsonFeatures = jsonResponse.features\n\n    var jsonFeaturesZero = jsonResponse.features[0].geometry.coordinates[0];\n    console.log(jsonFeaturesZero, '<<<< ZERO '); // var jsonFeaturesOne = jsonResponse.features[0].geometry.coordinates[0]\n    // console.log(jsonFeaturesOne, '<<<< ONE ')\n\n    setServerResponseZero(jsonFeaturesZero); // setServerResponseOne(jsonFeaturesOne)\n  }\n\n  useEffect(() => {\n    console.log(\"in use effect!\");\n    getData();\n  }, []); // const [ activeCovid, setActiveCovid ] = useState( null );\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      position: [80.593683, 78.962883] // center={position} \n      // position = 'topRight'\n      ,\n      zoom: 5,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://stadiamaps.com/\\\">Stadia Maps</a>, \\xA9 <a href=\\\"https://openmaptiles.org/\\\">OpenMapTiles</a> \\xA9 <a href=\\\"http://openstreetmap.org\\\">OpenStreetMap</a> contributors\",\n        url: \"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 8\n      }, this), serverResponseZero.map(anObjectMapped => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [anObjectMapped[0], anObjectMapped[1]]\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"3dFjyqbcsNW0gJpOC1oJwRDG1yM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/maira/Desktop/netLumeProject/react-app/src/App.js"],"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","Icon","covidData","App","position","setPosition","serverResponseZero","setServerResponseZero","serverResponseOne","setServerResponseOne","testCoordinates","getData","console","log","response","fetch","jsonResponse","json","jsonFeaturesZero","features","geometry","coordinates","map","anObjectMapped","index"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;0CAEA;;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,CAAxC,CADa,CAEb;;AACA,QAAM,CAACW,kBAAD,EAAqBC,qBAArB,IAA8CZ,QAAQ,EAA5D;AACA,QAAM,CAACa,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,EAA1D;AAGA,QAAMe,eAAe,GAAG,CAAC,CAAE,SAAF,EAAa,SAAb,CAAD,EAA2B,CAAE,UAAF,EAAc,UAAd,CAA3B,EAAuD,CAAE,UAAF,EAAc,UAAd,CAAvD,CAAxB,CAPa,CASf;AACA;;AACE,iBAAeC,OAAf,GAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAA5B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,UAAMG,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B,CAJuB,CAKvB;AACA;AACA;;AACA,QAAIC,gBAAgB,GAAGF,YAAY,CAACG,QAAb,CAAsB,CAAtB,EAAyBC,QAAzB,CAAkCC,WAAlC,CAA8C,CAA9C,CAAvB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYK,gBAAZ,EAA8B,YAA9B,EATuB,CAUvB;AACA;;AACAX,IAAAA,qBAAqB,CAACW,gBAAD,CAArB,CAZuB,CAavB;AACD;;AAEDtB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAF,IAAAA,OAAO;AACR,GAHQ,EAGN,EAHM,CAAT,CA3Ba,CA+Bb;;AAGA,sBAAQ;AAAA,2BAGT,QAAC,YAAD;AACS,MAAA,QAAQ,EAAK,CAAE,SAAF,EAAa,SAAb,CADtB,CAES;AACA;AAHT;AAKS,MAAA,IAAI,EAAK,CALlB;AAMS,MAAA,eAAe,EAAK,IAN7B;AAAA,8BASK,QAAC,SAAD;AACE,QAAA,WAAW,EAAC,gMADd;AAEE,QAAA,GAAG,EAAG;AAFR;AAAA;AAAA;AAAA;AAAA,cATL,eAeM,QAAC,SAAD;AACG,QAAA,WAAW,EAAG,0EADjB;AAEG,QAAA,GAAG,EAAG;AAFT;AAAA;AAAA;AAAA;AAAA,cAfN,EAqBEL,kBAAkB,CAACgB,GAAnB,CAAuBC,cAAc,iBAGhC,QAAC,MAAD;AACA,QAAA,QAAQ,EAAE,CAACA,cAAc,CAAC,CAAD,CAAf,EAAoBA,cAAc,CAAC,CAAD,CAAlC;AADV,SAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,cAHL,CArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHS,mBAAR;AA2CD;;GA7EQrB,G;;KAAAA,G;AA+ET,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { Icon } from 'leaflet'\nimport covidData from './data.json'\nimport icon1 from './images/covid19.svg'\n// import { LatLngExpression } from 'leaflet';\n\n\nfunction App() {\n  const [position, setPosition] = useState([0,0])\n  //saving the information to be able to render\n  const [serverResponseZero, setServerResponseZero] = useState()\n  const [serverResponseOne, setServerResponseOne] = useState()\n\n\n  const testCoordinates = [[ 80.593683, 78.962883 ], [ 200.593683, 400.962883 ], [ 500.593683, 800.962883 ]]\n\n// serverResponse = value\n//setServerResponse is a function with the value as parameter\n  async function getData() {\n    console.log(\"fetching data\")\n    const response = await fetch('http://localhost:5000/mapview');\n    console.log(\"fetching data in json\")\n    const jsonResponse = await response.json();\n    // setServerResponse(jsonResponse)\n    // console.log(\"fetching the json FEATURES\")\n    // var jsonFeatures = jsonResponse.features\n    var jsonFeaturesZero = jsonResponse.features[0].geometry.coordinates[0]\n    console.log(jsonFeaturesZero, '<<<< ZERO ')\n    // var jsonFeaturesOne = jsonResponse.features[0].geometry.coordinates[0]\n    // console.log(jsonFeaturesOne, '<<<< ONE ')\n    setServerResponseZero(jsonFeaturesZero)\n    // setServerResponseOne(jsonFeaturesOne)\n  }\n\n  useEffect(() => {\n    console.log(\"in use effect!\")\n    getData();\n  }, []);\n  // const [ activeCovid, setActiveCovid ] = useState( null );\n\n\n  return (<>\n\n\n <MapContainer \n          position = { [ 80.593683, 78.962883 ] }\n          // center={position} \n          // position = 'topRight'\n    \n          zoom = { 5 }\n          scrollWheelZoom = { true } \n\n      >\n      <TileLayer \n        attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n        url = 'https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'\n      />\n\n\n       <TileLayer \n          attribution = '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' \n          url = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" \n        />\n  \n    \n  {serverResponseZero.map(anObjectMapped => (\n\n    \n        <Marker key={index} \n        position={[anObjectMapped[0], anObjectMapped[1]]}\n          >\n            \n        </Marker>\n        \n    )\n  )} \n\n  \n  \n\n  </MapContainer> \n\n  </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}