{"ast":null,"code":"var _jsxFileName = \"/home/maira/Desktop/netLumeProject/react-app/src/App.js\",\n    _s = $RefreshSig$();\n\n// import {React, useState} from 'react'\n// import './App.css'\n// import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\n// import { Icon } from 'leaflet'\n// import covidData from './data.json'\n// import icon1 from './images/covid19.svg'\n// const covidIcon = new Icon({\n//   iconUrl: icon1,\n//   iconSize: [25, 25]\n// })\n// function App() {\n//   const [ activeCovid, setActiveCovid ] = useState( null );\n//   return (\n//       <MapContainer \n//           center = { [ 20.593683, 78.962883 ] }\n//           zoom = { 5 }\n//           scrollWheelZoom = { true } \n//       >\n//       <TileLayer \n//         attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n//         url = 'https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'\n//       />\n//        <TileLayer \n//           attribution = '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' \n//           url = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" \n//         />\n//        { covidData.map(eachData => (\n//          <Marker \n//             key={eachData.Id} \n//             position= {[eachData.Latitude, eachData.Longitude]}\n//             eventHandlers={{\n//               click: () => {\n//                 setActiveCovid(eachData)\n//               }\n//             }}\n//             icon= {covidIcon}\n//           />\n//        ))}\n//       { activeCovid && (\n//         <Popup \n//           position={ [ activeCovid.Latitude, activeCovid.Longitude ] }\n//           onClose={()=>{\n//             setActiveCovid(null)\n//           }}\n//         >\n//           <div>\n//             <h1>{ activeCovid.Location }</h1>\n//             <p>Total cases:                { activeCovid.Total_Cases }</p>\n//             <p>New cases (1 day*):         { activeCovid.New_Cases_Per_Day }</p>\n//             <p>Cases per 1 million people: { activeCovid.Cases_Per_1_Million_People }</p>\n//             <p>Deaths:                     { activeCovid.Deaths }</p>\n//           </div>\n//         </Popup>\n//       )}\n//       </MapContainer> \n//   );\n// }\n// export default App;\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //saving the information to be able to render\n  const [serverResponse, setServerResponse] = useState(); // serverResponse = value\n  //setServerResponse is a function with the value as parameter\n\n  async function getData() {\n    console.log(\"fetching data\");\n    const response = await fetch('http://localhost:5000/mapview');\n    const jsonResponse = await response.json();\n    setServerResponse(jsonResponse);\n    console.log(\"jsonResponse\", jsonResponse);\n    console.log(\"features of the object\", jsonResponse.features[0].geometry.coordinates[0]);\n  }\n\n  useEffect(() => {\n    console.log(\"in use effect!\");\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KQB+0Sgpn9NtZUz1OS5JGQX75Dw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/maira/Desktop/netLumeProject/react-app/src/App.js"],"names":["React","useState","useEffect","App","serverResponse","setServerResponse","getData","console","log","response","fetch","jsonResponse","json","features","geometry","coordinates","logo"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;AAIA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,EAApD,CAFa,CAGf;AACA;;AACE,iBAAeK,OAAf,GAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAA5B;AACA,UAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAP,IAAAA,iBAAiB,CAACM,YAAD,CAAjB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,YAA5B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCG,YAAY,CAACE,QAAb,CAAsB,CAAtB,EAAyBC,QAAzB,CAAkCC,WAAlC,CAA8C,CAA9C,CAAtC;AACD;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAF,IAAAA,OAAO;AACR,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEU,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GArCQb,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["// import {React, useState} from 'react'\n// import './App.css'\n// import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\n// import { Icon } from 'leaflet'\n// import covidData from './data.json'\n// import icon1 from './images/covid19.svg'\n\n// const covidIcon = new Icon({\n//   iconUrl: icon1,\n//   iconSize: [25, 25]\n// })\n\n\n// function App() {\n//   const [ activeCovid, setActiveCovid ] = useState( null );\n//   return (\n\n//       <MapContainer \n//           center = { [ 20.593683, 78.962883 ] }\n//           zoom = { 5 }\n//           scrollWheelZoom = { true } \n\n//       >\n//       <TileLayer \n//         attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n//         url = 'https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'\n//       />\n\n\n//        <TileLayer \n//           attribution = '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' \n//           url = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" \n//         />\n//        { covidData.map(eachData => (\n//          <Marker \n//             key={eachData.Id} \n//             position= {[eachData.Latitude, eachData.Longitude]}\n//             eventHandlers={{\n//               click: () => {\n//                 setActiveCovid(eachData)\n//               }\n//             }}\n//             icon= {covidIcon}\n//           />\n//        ))}\n\n//       { activeCovid && (\n//         <Popup \n//           position={ [ activeCovid.Latitude, activeCovid.Longitude ] }\n//           onClose={()=>{\n//             setActiveCovid(null)\n//           }}\n//         >\n//           <div>\n//             <h1>{ activeCovid.Location }</h1>\n//             <p>Total cases:                { activeCovid.Total_Cases }</p>\n//             <p>New cases (1 day*):         { activeCovid.New_Cases_Per_Day }</p>\n//             <p>Cases per 1 million people: { activeCovid.Cases_Per_1_Million_People }</p>\n//             <p>Deaths:                     { activeCovid.Deaths }</p>\n//           </div>\n//         </Popup>\n//       )}\n\n//       </MapContainer> \n  \n//   );\n// }\n\n// export default App;\n\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\n\n\nfunction App() {\n  //saving the information to be able to render\n  const [serverResponse, setServerResponse] = useState()\n// serverResponse = value\n//setServerResponse is a function with the value as parameter\n  async function getData() {\n    console.log(\"fetching data\")\n    const response = await fetch('http://localhost:5000/mapview');\n    const jsonResponse = await response.json();\n    setServerResponse(jsonResponse)\n    console.log(\"jsonResponse\", jsonResponse)\n    console.log(\"features of the object\", jsonResponse.features[0].geometry.coordinates[0])\n  }\n\n  useEffect(() => {\n    console.log(\"in use effect!\")\n    getData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}