{"ast":null,"code":"var _jsxFileName = \"/home/maira/Desktop/netLumeProject/react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport covidData from './data.json';\nimport icon1 from \"./images/covid19.svg\"; // import { LatLngExpression } from 'leaflet';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [activeInfo, setActiveInfo] = useState(null);\n  const [position, setPosition] = useState([0, 0]);\n  const [serverResponse, setServerResponse] = useState();\n  const [featuresArray, setFeaturesArray] = useState();\n\n  async function getData() {\n    console.log(\"fetching data\");\n    const response = await fetch('http://localhost:5000/mapview');\n    console.log(\"fetching data in json\");\n    const jsonResponse = await response.json();\n    const teste = jsonResponse.features;\n    console.log(teste, '<<<< thats what I am getting from server '); // var jsonCoordinates = jsonResponse.features[0].geometry.coordinates\n\n    var featuresArray = jsonResponse.features; // console.log(jsonCoordinates, '<<<< final coordinates x and y ')\n    // setServerResponse(jsonCoordinates)\n\n    setFeaturesArray(featuresArray);\n  }\n\n  useEffect(() => {\n    console.log(\"in use effect!\");\n    getData();\n  }, []); // const [ activeCovid, setActiveCovid ] = useState( null );\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [8.382046, 11.6146463],\n      center: position,\n      zoom: 3,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://stadiamaps.com/\\\">Stadia Maps</a>, \\xA9 <a href=\\\"https://openmaptiles.org/\\\">OpenMapTiles</a> \\xA9 <a href=\\\"http://openstreetmap.org\\\">OpenStreetMap</a> contributors\",\n        url: \"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 8\n      }, this), featuresArray && featuresArray.map(featureObject => {\n        featureObject.geometry.coordinates.map(singleCoordinate => {\n          /*#__PURE__*/\n          _jsxDEV(Marker //  key={eachData.Id} \n          , {\n            position: singleCoordinate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 8\n          }, this);\n        });\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"tvES3vvEQyJ2lYjo0zYI7owOQMQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/maira/Desktop/netLumeProject/react-app/src/App.js"],"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","Icon","covidData","App","activeInfo","setActiveInfo","position","setPosition","serverResponse","setServerResponse","featuresArray","setFeaturesArray","getData","console","log","response","fetch","jsonResponse","json","teste","features","map","featureObject","geometry","coordinates","singleCoordinate"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;0CAEA;;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCV,QAAQ,CAAE,IAAF,CAA9C;AAEA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,CAAxC;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,EAApD;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,EAAlD;;AACA,iBAAeiB,OAAf,GAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAA5B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,UAAMG,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACA,UAAMC,KAAK,GAAGF,YAAY,CAACG,QAA3B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ,EAAmB,2CAAnB,EANuB,CAOvB;;AACA,QAAIT,aAAa,GAAGO,YAAY,CAACG,QAAjC,CARuB,CAWvB;AACA;;AACAT,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACD;;AAEDd,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAF,IAAAA,OAAO;AACR,GAHQ,EAGN,EAHM,CAAT,CAtBa,CA0Bb;;AACA,sBAAQ;AAAA,2BACT,QAAC,YAAD;AACS,MAAA,MAAM,EAAI,CAAC,QAAD,EAAW,UAAX,CADnB;AAES,MAAA,MAAM,EAAEN,QAFjB;AAGW,MAAA,IAAI,EAAK,CAHpB;AAIS,MAAA,eAAe,EAAK,IAJ7B;AAAA,8BAMK,QAAC,SAAD;AACE,QAAA,WAAW,EAAC,gMADd;AAEE,QAAA,GAAG,EAAG;AAFR;AAAA;AAAA;AAAA;AAAA,cANL,eAUM,QAAC,SAAD;AACG,QAAA,WAAW,EAAG,0EADjB;AAEG,QAAA,GAAG,EAAG;AAFT;AAAA;AAAA;AAAA;AAAA,cAVN,EAcGI,aAAa,IAAIA,aAAa,CAACW,GAAd,CAAkBC,aAAa,IAAI;AACnDA,QAAAA,aAAa,CAACC,QAAd,CAAuBC,WAAvB,CAAmCH,GAAnC,CAAwCI,gBAAgB,IAAI;AAC1D;AAAA,kBAAC,MAAD,CACD;AADC;AAEA,YAAA,QAAQ,EAAGA;AAFX;AAAA;AAAA;AAAA;AAAA;AASD,SAVD;AAUG,OAXa,CAdpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADS,mBAAR;AAgCD;;GA3DQtB,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { Icon } from 'leaflet'\nimport covidData from './data.json'\nimport icon1 from './images/covid19.svg'\n// import { LatLngExpression } from 'leaflet';\n\n\nfunction App() {\n  const [ activeInfo, setActiveInfo ] = useState( null );\n\n  const [position, setPosition] = useState([0,0])\n  const [serverResponse, setServerResponse] = useState()\n  const [featuresArray, setFeaturesArray] = useState()\n  async function getData() {\n    console.log(\"fetching data\")\n    const response = await fetch('http://localhost:5000/mapview');\n    console.log(\"fetching data in json\")\n    const jsonResponse = await response.json();\n    const teste = jsonResponse.features\n    console.log(teste, '<<<< thats what I am getting from server ')\n    // var jsonCoordinates = jsonResponse.features[0].geometry.coordinates\n    var featuresArray = jsonResponse.features\n\n\n    // console.log(jsonCoordinates, '<<<< final coordinates x and y ')\n    // setServerResponse(jsonCoordinates)\n    setFeaturesArray(featuresArray)\n  }\n\n  useEffect(() => {\n    console.log(\"in use effect!\")\n    getData();\n  }, []);\n  // const [ activeCovid, setActiveCovid ] = useState( null );\n  return (<>\n <MapContainer \n          center = {[8.382046, 11.6146463 ]}\n          center={position} \n            zoom = { 3 }\n          scrollWheelZoom = { true } \n      >\n      <TileLayer \n        attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n        url = 'https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'\n      />\n       <TileLayer \n          attribution = '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' \n          url = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" \n        />\n   {featuresArray && featuresArray.map(featureObject => { \n     featureObject.geometry.coordinates.map (singleCoordinate => {\n       <Marker\n      //  key={eachData.Id} \n       position= {singleCoordinate}\n\n\n       ></Marker>\n\n\n       \n     })})} \n\n  </MapContainer> \n\n  </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}