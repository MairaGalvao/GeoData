{"ast":null,"code":"var _jsxFileName = \"/home/maira/Desktop/netLumeProject/react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport covidData from './data.json';\nimport icon1 from \"./images/covid19.svg\"; // import { LatLngExpression } from 'leaflet';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [activeInfo, setActiveInfo] = useState(null);\n  const [position, setPosition] = useState([0, 0]);\n  const [serverResponse, setServerResponse] = useState();\n\n  async function getData() {\n    console.log(\"fetching data\");\n    const response = await fetch('http://localhost:5000/mapview');\n    console.log(\"fetching data in json\");\n    const jsonResponse = await response.json();\n    const teste = jsonResponse.features;\n    console.log(teste, '<<<< thats what I am getting from server ');\n    var jsonCoordinates = jsonResponse.features[0].geometry.coordinates; // console.log(jsonCoordinates, '<<<< final coordinates x and y ')\n\n    setServerResponse(jsonCoordinates);\n  }\n\n  useEffect(() => {\n    console.log(\"in use effect!\");\n    getData();\n  }, []); // const [ activeCovid, setActiveCovid ] = useState( null );\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [8.382046, 11.6146463],\n      center: position,\n      zoom: 3,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://stadiamaps.com/\\\">Stadia Maps</a>, \\xA9 <a href=\\\"https://openmaptiles.org/\\\">OpenMapTiles</a> \\xA9 <a href=\\\"http://openstreetmap.org\\\">OpenStreetMap</a> contributors\",\n        url: \"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }, this), serverResponse && serverResponse.map((anObjectMapped, index) => {\n        // console.log(anObjectMapped)     // [x, y]\n        // console.log(index)\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: [anObjectMapped[0], anObjectMapped[1]],\n          eventHandlers: {\n            click: () => {\n              setActiveInfo(anObjectMapped);\n            }\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this);\n      }), activeInfo && /*#__PURE__*/_jsxDEV(Popup, {\n        position: [activeInfo[0], activeInfo[1]],\n        onClose: () => {\n          setActiveInfo(null);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: activeInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"+6auo9jYaVA0qj40bekg8ljWPqQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/maira/Desktop/netLumeProject/react-app/src/App.js"],"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","Icon","covidData","App","activeInfo","setActiveInfo","position","setPosition","serverResponse","setServerResponse","getData","console","log","response","fetch","jsonResponse","json","teste","features","jsonCoordinates","geometry","coordinates","map","anObjectMapped","index","click"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { Icon } from 'leaflet'\nimport covidData from './data.json'\nimport icon1 from './images/covid19.svg'\n// import { LatLngExpression } from 'leaflet';\n\n\nfunction App() {\n  const [ activeInfo, setActiveInfo ] = useState( null );\n\n  const [position, setPosition] = useState([0,0])\n  const [serverResponse, setServerResponse] = useState()\n  async function getData() {\n    console.log(\"fetching data\")\n    const response = await fetch('http://localhost:5000/mapview');\n    console.log(\"fetching data in json\")\n    const jsonResponse = await response.json();\n    const teste = jsonResponse.features\n    console.log(teste, '<<<< thats what I am getting from server ')\n    var jsonCoordinates = jsonResponse.features[0].geometry.coordinates\n    // console.log(jsonCoordinates, '<<<< final coordinates x and y ')\n    setServerResponse(jsonCoordinates)\n  }\n\n  useEffect(() => {\n    console.log(\"in use effect!\")\n    getData();\n  }, []);\n  // const [ activeCovid, setActiveCovid ] = useState( null );\n  return (<>\n <MapContainer \n          center = {[8.382046, 11.6146463 ]}\n          center={position} \n            zoom = { 3 }\n          scrollWheelZoom = { true } \n      >\n      <TileLayer \n        attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n        url = 'https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'\n      />\n       <TileLayer \n          attribution = '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' \n          url = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" \n        />\n   {serverResponse && serverResponse.map((anObjectMapped, index) => {\n    // console.log(anObjectMapped)     // [x, y]\n    // console.log(index)\n    return (\n          <Marker key={index} \n        position={[anObjectMapped[0], anObjectMapped[1]]}\n        eventHandlers={{\n          click: () => {\n            setActiveInfo(anObjectMapped)\n          }\n        }} >\n              </Marker>\n           );\n})}\n\n{ activeInfo && (\n        <Popup \n        position={[activeInfo[0], activeInfo[1]]}\n          onClose={()=>{\n            setActiveInfo(null)\n          }}\n        >\n          <div>\n            <h1>{ activeInfo }</h1>\n\n          </div>\n        </Popup>\n      )}\n\n  </MapContainer> \n\n  </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}