{"ast":null,"code":"var _jsxFileName = \"/home/maira/Desktop/netLumeProject/react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport './App.css';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport covidData from './data.json';\nimport icon1 from \"./images/covid19.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst covidIcon = new Icon({\n  iconUrl: icon1,\n  iconSize: [25, 25]\n});\n\nfunction App() {\n  _s();\n\n  const [activeCovid, setActiveCovid] = useState(null);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [20.593683, 78.962883],\n    zoom: 5,\n    scrollWheelZoom: true,\n    children: [covidData.map(eachData => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [eachData.Latitude, eachData.Longitude],\n      eventHandlers: {\n        click: () => {\n          setActiveCovid(eachData);\n        }\n      },\n      icon: covidIcon\n    }, eachData.Id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this)), activeCovid && /*#__PURE__*/_jsxDEV(Popup, {\n      position: [activeCovid.Latitude, activeCovid.Longitude],\n      onClose: () => {\n        setActiveCovid(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: activeCovid.Location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total cases:                \", activeCovid.Total_Cases]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"New cases (1 day*):         \", activeCovid.New_Cases_Per_Day]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Cases per 1 million people: \", activeCovid.Cases_Per_1_Million_People]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Deaths:                     \", activeCovid.Deaths]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"rAVlOk7mv+hWyvqDI3crHIU5nJc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/maira/Desktop/netLumeProject/react-app/src/App.js"],"names":["React","useState","MapContainer","TileLayer","Marker","Popup","Icon","covidData","covidIcon","iconUrl","icon1","iconSize","App","activeCovid","setActiveCovid","map","eachData","Latitude","Longitude","click","Id","Location","Total_Cases","New_Cases_Per_Day","Cases_Per_1_Million_People","Deaths"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAGA,MAAMC,SAAS,GAAG,IAAIF,IAAJ,CAAS;AACzBG,EAAAA,OAAO,EAAEC,KADgB;AAEzBC,EAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAFe,CAAT,CAAlB;;AAMA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCb,QAAQ,CAAE,IAAF,CAAhD;AACA,sBAEI,QAAC,YAAD;AACI,IAAA,MAAM,EAAK,CAAE,SAAF,EAAa,SAAb,CADf;AAEI,IAAA,IAAI,EAAK,CAFb;AAGI,IAAA,eAAe,EAAK,IAHxB;AAAA,eAeGM,SAAS,CAACQ,GAAV,CAAcC,QAAQ,iBACtB,QAAC,MAAD;AAEG,MAAA,QAAQ,EAAG,CAACA,QAAQ,CAACC,QAAV,EAAoBD,QAAQ,CAACE,SAA7B,CAFd;AAGG,MAAA,aAAa,EAAE;AACbC,QAAAA,KAAK,EAAE,MAAM;AACXL,UAAAA,cAAc,CAACE,QAAD,CAAd;AACD;AAHY,OAHlB;AAQG,MAAA,IAAI,EAAGR;AARV,OACQQ,QAAQ,CAACI,EADjB;AAAA;AAAA;AAAA;AAAA,YADA,CAfH,EA4BEP,WAAW,iBACX,QAAC,KAAD;AACE,MAAA,QAAQ,EAAG,CAAEA,WAAW,CAACI,QAAd,EAAwBJ,WAAW,CAACK,SAApC,CADb;AAEE,MAAA,OAAO,EAAE,MAAI;AACXJ,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD,OAJH;AAAA,6BAME;AAAA,gCACE;AAAA,oBAAMD,WAAW,CAACQ;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,qDAAiCR,WAAW,CAACS,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,qDAAiCT,WAAW,CAACU,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,qDAAiCV,WAAW,CAACW,0BAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,qDAAiCX,WAAW,CAACY,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkDD;;GApDQb,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import {React, useState} from 'react'\nimport './App.css'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { Icon } from 'leaflet'\nimport covidData from './data.json'\nimport icon1 from './images/covid19.svg'\n\nconst covidIcon = new Icon({\n  iconUrl: icon1,\n  iconSize: [25, 25]\n})\n\n\nfunction App() {\n  const [ activeCovid, setActiveCovid ] = useState( null );\n  return (\n\n      <MapContainer \n          center = { [ 20.593683, 78.962883 ] }\n          zoom = { 5 }\n          scrollWheelZoom = { true } \n\n      >\n      {/* <TileLayer \n        attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n        url = 'https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'\n      /> */}\n\n       {/* <TileLayer \n          attribution = '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' \n          url = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" \n        /> */}\n       { covidData.map(eachData => (\n         <Marker \n            key={eachData.Id} \n            position= {[eachData.Latitude, eachData.Longitude]}\n            eventHandlers={{\n              click: () => {\n                setActiveCovid(eachData)\n              }\n            }}\n            icon= {covidIcon}\n          />\n       ))}\n\n      { activeCovid && (\n        <Popup \n          position={ [ activeCovid.Latitude, activeCovid.Longitude ] }\n          onClose={()=>{\n            setActiveCovid(null)\n          }}\n        >\n          <div>\n            <h1>{ activeCovid.Location }</h1>\n            <p>Total cases:                { activeCovid.Total_Cases }</p>\n            <p>New cases (1 day*):         { activeCovid.New_Cases_Per_Day }</p>\n            <p>Cases per 1 million people: { activeCovid.Cases_Per_1_Million_People }</p>\n            <p>Deaths:                     { activeCovid.Deaths }</p>\n          </div>\n        </Popup>\n      )}\n\n      </MapContainer> \n  \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}